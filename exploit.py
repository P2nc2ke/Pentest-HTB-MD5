import sys
import requests
from html.parser import HTMLParser
import hashlib

protocol = "http://"
url_base = "206.189.17.51"
port = 30815
host = protocol + url_base + ":" + str(port)
tag_to_parse = "h3"
response_tag_to_parse = "p"

class MyHTMLParser(HTMLParser):
    def __init__(self, tag):
        HTMLParser.__init__(self)
        self._tag_to_parse = tag
        self._tag = ""
        self.ParsedData = ""

    def handle_starttag(self, tag, attrs):
        #print("Encountered a start tag:", tag)
        self._tag = tag 

    def handle_endtag(self, tag):
        #print("Encountered an end tag :", tag)
        self._tag = ""

    def handle_data(self, data):
        if self._tag_to_parse == self._tag:
            #print(self._tag + ": ", data)
            self.ParsedData = data

def postData(hash_value, first_cookies):
    try:
        parser = MyHTMLParser(response_tag_to_parse)
        pload = {"hash":hash_value}
        r = requests.post(url = host, data = pload, cookies=first_cookies)
        if r.status_code != 200:
            raise Exception("Error - Server response with code " + str(r.status_code) + "\nResponse data: " + r.text)
        parser.feed(r.text)
        if parser.ParsedData:
            print("Result = " + parser.ParsedData)
        else:
            print("No tag: " + response_tag_to_parse + " presented in response.\n"+r.text)    
    except :
        print("Post error:", sys.exc_info())
    finally:
        parser.close()

def getData():
    try:
        parser = MyHTMLParser(tag_to_parse)
        r = requests.get(url = host, params = "")
        if r.status_code != 200:
            raise Exception("Error - Server response with code " + str(r.status_code) + "\nResponse data: " + r.text)
        #print(data)
        parser.feed(r.text)
        if parser.ParsedData:
            print("Input received String = " + parser.ParsedData)
            postData(hashlib.md5(parser.ParsedData.encode()).hexdigest(), r.cookies)
        else:
            print("No tag: " + tag_to_parse + " presented in response.")
    except:
        print("Unexpected error:", sys.exc_info())
    finally:
        parser.close()

print("Trying host: " + host)
getData()
